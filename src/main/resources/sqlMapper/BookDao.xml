<?xml version="1.0" encoding="UTF-8" ?>  
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.turtledove.bookdrift.infrastruct.dao.BookDao">

	<resultMap type="com.turtledove.bookdrift.domain.entity.Book"
		id="result">
		<id property="Id" column="BOOK_ID" />
		<result property="bookName" column="BOOK_NAME" />
		<result property="authorName" column="AUTHOR" />
		<result property="bookPrice" column="BOOK_PRICE" />
		<result property="bookPress" column="BOOK_PRESS" />
		<result property="publishDate" column="PUBLISH_DATE" />
		<result property="bookVersion" column="BOOK_VERSION" />
		<result property="creatDate" column="CREAT_DATE" />
		<result property="lastUpdateDate" column="LAST_UPDATE_DATE" />
	</resultMap>

	<sql id="sql_select">
		SELECT
		BOOK_ID,
		BOOK_NAME,
		AUTHOR,
		BOOK_PRICE,
		BOOK_PRESS,
		PUBLISH_DATE,
		BOOK_VERSION,
		CREAT_DATE,
		LAST_UPDATE_DATE
		FROM bd_book
	</sql>
	<sql id="sql_select_m">
		SELECT
		B.BOOK_ID AS Id,
		B.BOOK_NAME AS bookName,
		b.AUTHOR AS
		authorName,
		B.BOOK_PRESS AS bookPress,
		B.BOOK_PRICE AS bookPrice,
		B.BOOK_VERSION AS bookVersion,
		B.PUBLISH_DATE AS publishDate,
		B.CREAT_DATE AS createDate,
		B.LAST_UPDATE_DATE AS lastUpdateDate
	</sql>
	<select id="findById" parameterType="Integer" resultMap="result">
		<include refid="sql_select" />
		WHERE BOOK_ID = #{Id};
	</select>
	<select id="findBooksByBooKName" parameterType="String"
		resultMap="result">
		<include refid="sql_select" />
		WHERE BOOK_ID > 0
		<if test="bookName!=null">
			and BOOK_NAME like CONCAT('%','${bookName}','%' )
		</if>
	</select>
	<select id="getBooksUnderUserAndTag" parameterType="Map"
		resultMap="result">
		<include refid="sql_select_m" />
		FROM bd_user AS U
		INNER JOIN bd_user_book_ass AS UB ON U.USER_ID =
		UB.USER_ID
		INNER JOIN bd_user_label AS UL ON U.USER_ID = UL.USER_ID
		INNER JOIN bd_label AS L ON L.LABEL_ID = UL.LABEL_ID
		INNER JOIN bd_book
		AS B ON B.BOOK_ID = UB.BOOK_ID
		WHERE L.LABEL_NAME = #{tag}
		AND
		U.USER_EMAIL =#{email};
	</select>
	<select id="query" parameterType="BookInfo" resultMap="result">
		<include refid="sql_select" />
		<where>
			<if test="bookInfo.bookName!=null and bookInfo.bookName !='' ">
				BOOK_NAME like CONCAT('%','${bookInfo.bookName}','%' )
			</if>
			<if test="bookInfo.authorName!=null and bookInfo.authorName != ''">
				AND AUTHOR like CONCAT('%','${bookInfo.authorName}','%' )
			</if>
			<if test="bookInfo.version != null">
				AND BOOK_VERSION = ${bookInfo.version}
			</if>
			<if test="bookInfo.press !=null and bookInfo.press !=''">
				AND BOOK_PRESS like CONCAT('%','${bookInfo.press}','%' )
			</if>
		</where>
	</select>
	<select id="getBookUnderUser" parameterType="Integer" resultMap="result">
		<include refid="sql_select_m" />
		FROM bd_book AS B
		INNER JOIN bd_user_book_ass AS UB
		ON B.BOOK_ID = UB.BOOK_ID
		WHERE UB.USER_ID = #{Id}
	</select>
	<insert id="insert" parameterType="Book" useGeneratedKeys="true"
		keyProperty="Id">
		INSERT INTO
		bd_book(BOOK_NAME,AUTHOR,BOOK_PRICE,BOOK_PRESS,PUBLISH_DATE,BOOK_VERSION,CREAT_DATE,LAST_UPDATE_DATE)
		values(#{bookName},#{authorName},#{bookPrice},#{bookPress},#{publishDate},#{bookVersion},#{createDate},#{lastUpdateDate});
	</insert>
</mapper>